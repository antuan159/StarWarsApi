{"version":3,"sources":["components/pages/Common.module.css","components/Services/api.js","components/pages/HomePage.js","components/Services/helpers.js","components/pages/FilmsDetailsPage.js","components/pages/PeoplePage.js","components/pages/PlanetPage.js","components/pages/SpeciesPage.js","components/pages/StarshipsPage.js","components/pages/VehiclesPage.js","routes.js","components/App/App.js","index.js"],"names":["module","exports","getAllFilms","a","fetch","res","json","data","results","console","log","getDetail","query","URL","search","options","value","label","HomePage","state","films","isLoading","select","handleChangeInput","e","setState","target","handleChangeSelect","handleSubmitInput","fetchSearch","api","fetchAllFilms","handleSort","tmp","sort","b","title","this","prevProps","prevState","type","onClick","color","height","width","map","film","key","url","to","pathname","slice","onChange","minLength","debounceTimeout","index","name","Component","dataFetch","convertArrToObject","obj","chars","char","push","FilmsDetailsPage","handleLoadList","helpers","location","props","episode_id","opening_crawl","director","producer","release_date","characters","length","className","style","planets","starships","vehicles","species","created","edited","PeoplePage","people","mass","hair_color","skin_color","eye_color","birth_year","gender","homeworld","PlanetPage","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","SpeciesPage","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","StarshipsPage","model","manufacturer","cost_in_credits","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","pilots","VehiclesPage","vehicle_class","App","exact","path","routes","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.692e8668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Common_name__2tY8h\"};","const getAllFilms = async () => {\n  const URL = 'https://swapi.co/api/films';\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data.results;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nconst getDetail = async query => {\n  const URL = `https://swapi.co/api${query}`;\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nconst search = async query => {\n  const URL = `https://swapi.co/api/${query}`;\n  try {\n    const res = await fetch(URL);\n    const data = await res.json();\n    return data.results;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport default {\n  getDetail,\n  search,\n  getAllFilms,\n};\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DebounceInput } from 'react-debounce-input';\r\nimport Select from 'react-dropdown-select';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport api from '../Services/api';\r\n\r\nconst options = [\r\n  { value: 'films/', label: 'films' },\r\n  { value: 'people/', label: 'people' },\r\n  { value: 'planets/', label: 'planets' },\r\n];\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    films: [],\r\n    isLoading: false,\r\n    query: '',\r\n    search: null,\r\n    select: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.fetchAllFilms();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { query } = this.state;\r\n    if (prevState.query !== query) {\r\n      this.handleSubmitInput(query);\r\n    }\r\n  }\r\n\r\n  handleChangeInput = e => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  handleChangeSelect = e => {\r\n    this.setState({ select: e[0].value });\r\n  };\r\n\r\n  handleSubmitInput = async () => {\r\n    await this.fetchSearch(this.state.query, this.state.select);\r\n  };\r\n\r\n  fetchSearch = async (query, select) => {\r\n    this.setState({ isLoading: true });\r\n    const search = await api.search(`${select}?search=${query}`);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ search });\r\n  };\r\n\r\n  fetchAllFilms = async () => {\r\n    this.setState({ isLoading: true });\r\n    const films = await api.getAllFilms();\r\n    this.setState({ isLoading: false });\r\n    this.setState({ films });\r\n  };\r\n\r\n  handleSort = () => {\r\n    const tmp = this.state.films;\r\n    tmp.sort((a, b) => {\r\n      if (a.title < b.title) {\r\n        return -1;\r\n      }\r\n      if (a.title > b.title) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    this.setState(tmp);\r\n  };\r\n\r\n  render() {\r\n    const { films, isLoading, query, select, search } = this.state;\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.handleSort}>\r\n          Sort by name\r\n        </button>\r\n        <h1>Films</h1>\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        <ul>\r\n          {films.map(film => (\r\n            <li key={film.url}>\r\n              <NavLink\r\n                to={{\r\n                  pathname: film.url.slice(20),\r\n                  state: film.url.slice(20),\r\n                }}\r\n              >\r\n                <p>{film.title}</p>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p>select categories search:</p>\r\n        <Select\r\n          value={select}\r\n          onChange={this.handleChangeSelect}\r\n          options={options}\r\n        />\r\n\r\n        <DebounceInput\r\n          minLength={1}\r\n          debounceTimeout={300}\r\n          onChange={this.handleChangeInput}\r\n        />\r\n        {/* <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search ...\"\r\n          value={query}\r\n          onChange={values => this.handleChangeInput(values)}\r\n        /> */}\r\n        {select &&\r\n          query !== '' &&\r\n          search &&\r\n          search.map(index => (\r\n            <NavLink\r\n              to={{\r\n                pathname: index.url.slice(20),\r\n                state: index.url.slice(20),\r\n              }}\r\n              key={index.url}\r\n            >\r\n              <p>{index.name || index.title}</p>\r\n            </NavLink>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const dataFetch = async url => {\r\n  try {\r\n    const res = await fetch(`${url}?format=json`);\r\n    return await res.json();\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst convertArrToObject = async (obj, type) => {\r\n  if (obj[type]) {\r\n    const chars = [];\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const char of obj[type]) {\r\n      // eslint-disable-next-line no-await-in-loop\r\n      chars.push(await dataFetch(char));\r\n    }\r\n    return chars;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default {\r\n  convertArrToObject,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../Services/api';\r\nimport helpers from '../Services/helpers';\r\nimport style from './Common.module.css';\r\n\r\nexport default class FilmsDetailsPage extends Component {\r\n  static propTypes = {\r\n    location: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n\r\n  state = {\r\n    film: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    await this.getDetail(location.state);\r\n  }\r\n\r\n  getDetail = async query => {\r\n    this.setState({ isLoading: true });\r\n    const film = await api.getDetail(query);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ film });\r\n  };\r\n\r\n  handleLoadList = async type => {\r\n    this.setState({ isLoading: true });\r\n    const { film } = this.state;\r\n    film[type] = await helpers.convertArrToObject(film, type);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ film });\r\n  };\r\n\r\n  render() {\r\n    const { film, isLoading } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        {film && (\r\n          <div>\r\n            <p> {film.title}</p>\r\n            <p> {film.episode_id}</p>\r\n            <p> {film.opening_crawl}</p>\r\n            <p> {film.director}</p>\r\n            <p> {film.producer}</p>\r\n            <p> {film.release_date}</p>\r\n            {film.characters.length > 0 && (\r\n              <div>\r\n                <h2>characters:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('characters')}\r\n                >\r\n                  Open list characters\r\n                </button>\r\n                <br />\r\n                {typeof film.characters[0] !== 'string' &&\r\n                  film.characters.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {film.planets.length > 0 && (\r\n              <div>\r\n                <h2>planets:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('planets')}\r\n                >\r\n                  Open list planets\r\n                </button>\r\n                <br />\r\n                {typeof film.planets[0] !== 'string' &&\r\n                  film.planets.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {film.starships.length > 0 && (\r\n              <div>\r\n                <h2>starships:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('starships')}\r\n                >\r\n                  Open list starships\r\n                </button>\r\n                <br />\r\n                {typeof film.starships[0] !== 'string' &&\r\n                  film.starships.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {film.vehicles.length > 0 && (\r\n              <div>\r\n                <h2>vehicles:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('vehicles')}\r\n                >\r\n                  Open list vehicles\r\n                </button>\r\n                <br />\r\n                {typeof film.vehicles[0] !== 'string' &&\r\n                  film.vehicles.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {film.species.length > 0 && (\r\n              <div>\r\n                <h2>species:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('species')}\r\n                >\r\n                  Open list species\r\n                </button>\r\n                <br />\r\n                {typeof film.species[0] !== 'string' &&\r\n                  film.species.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            <p>{film.created}</p>\r\n            <p>{film.edited}</p>\r\n            <p>{film.url}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../Services/api';\r\nimport helpers from '../Services/helpers';\r\nimport style from './Common.module.css';\r\n\r\nexport default class PeoplePage extends Component {\r\n  static propTypes = {\r\n    location: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n\r\n  state = {\r\n    people: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    await this.getDetail(location.pathname);\r\n  }\r\n\r\n  getDetail = async query => {\r\n    this.setState({ isLoading: true });\r\n    const people = await api.getDetail(query);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ people });\r\n  };\r\n\r\n  handleLoadList = async type => {\r\n    this.setState({ isLoading: true });\r\n    const { people } = this.state;\r\n    people[type] = await helpers.convertArrToObject(people, type);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ people });\r\n  };\r\n\r\n  render() {\r\n    const { people, isLoading } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        {people && (\r\n          <div>\r\n            <p> {people.name}</p>\r\n            <p> {people.height}</p>\r\n            <p> {people.mass}</p>\r\n            <p> {people.hair_color}</p>\r\n            <p> {people.skin_color}</p>\r\n            <p> {people.eye_color}</p>\r\n            <p> {people.birth_year}</p>\r\n            <p> {people.gender}</p>\r\n            <p> {people.homeworld}</p>\r\n\r\n            {people.films.length > 0 && (\r\n              <div>\r\n                <h2>films:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('films')}\r\n                >\r\n                  Open list films\r\n                </button>\r\n                <br />\r\n                {typeof people.films[0] !== 'string' &&\r\n                  people.films.map(index => (\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: index.url.slice(20),\r\n                        state: index.url.slice(20),\r\n                      }}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.title}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {people.species.length > 0 && (\r\n              <div>\r\n                <h2>species:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('species')}\r\n                >\r\n                  Open list species\r\n                </button>\r\n                <br />\r\n                {typeof people.species[0] !== 'string' &&\r\n                  people.species.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {people.vehicles.length > 0 && (\r\n              <div>\r\n                <h2>vehicles:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('vehicles')}\r\n                >\r\n                  Open list vehicles\r\n                </button>\r\n                <br />\r\n                {typeof people.vehicles[0] !== 'string' &&\r\n                  people.vehicles.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {people.starships.length > 0 && (\r\n              <div>\r\n                <h2>starships:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('starships')}\r\n                >\r\n                  Open list starships\r\n                </button>\r\n                <br />\r\n                {typeof people.starships[0] !== 'string' &&\r\n                  people.starships.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n            <p>{people.created}</p>\r\n            <p>{people.edited}</p>\r\n            <p>{people.url}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../Services/api';\r\nimport helpers from '../Services/helpers';\r\nimport style from './Common.module.css';\r\n\r\nexport default class PlanetPage extends Component {\r\n  static propTypes = {\r\n    location: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n\r\n  state = {\r\n    planet: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    await this.getDetail(location.pathname);\r\n  }\r\n\r\n  getDetail = async query => {\r\n    this.setState({ isLoading: true });\r\n    const planet = await api.getDetail(query);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ planet });\r\n  };\r\n\r\n  handleLoadList = async type => {\r\n    this.setState({ isLoading: true });\r\n    const { planet } = this.state;\r\n    planet[type] = await helpers.convertArrToObject(planet, type);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ planet });\r\n  };\r\n\r\n  render() {\r\n    const { planet, isLoading } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        {planet && (\r\n          <div>\r\n            <p> {planet.name}</p>\r\n            <p> {planet.rotation_period}</p>\r\n            <p> {planet.orbital_period}</p>\r\n            <p> {planet.diameter}</p>\r\n            <p> {planet.climate}</p>\r\n            <p> {planet.gravity}</p>\r\n            <p> {planet.terrain}</p>\r\n            <p> {planet.surface_water}</p>\r\n            <p> {planet.population}</p>\r\n            <p> {planet.gravity}</p>\r\n\r\n            {planet.residents.length > 0 && (\r\n              <div>\r\n                <h2>residents:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('residents')}\r\n                >\r\n                  Open list residents\r\n                </button>\r\n                <br />\r\n                {typeof planet.residents[0] !== 'string' &&\r\n                  planet.residents.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {planet.films.length > 0 && (\r\n              <div>\r\n                <h2>films:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('films')}\r\n                >\r\n                  Open list films\r\n                </button>\r\n                <br />\r\n                {typeof planet.films[0] !== 'string' &&\r\n                  planet.films.map(index => (\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: index.url.slice(20),\r\n                        state: index.url.slice(20),\r\n                      }}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.title}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n            <p>{planet.created}</p>\r\n            <p>{planet.edited}</p>\r\n            <p>{planet.url}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../Services/api';\r\nimport helpers from '../Services/helpers';\r\nimport style from './Common.module.css';\r\n\r\nexport default class SpeciesPage extends Component {\r\n  static propTypes = {\r\n    location: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n\r\n  state = {\r\n    species: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    await this.getDetail(location.pathname);\r\n  }\r\n\r\n  getDetail = async query => {\r\n    this.setState({ isLoading: true });\r\n    const species = await api.getDetail(query);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ species });\r\n  };\r\n\r\n  handleLoadList = async type => {\r\n    this.setState({ isLoading: true });\r\n    const { species } = this.state;\r\n    species[type] = await helpers.convertArrToObject(species, type);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ species });\r\n  };\r\n\r\n  render() {\r\n    const { species, isLoading } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        {species && (\r\n          <div>\r\n            <p> {species.name}</p>\r\n            <p> {species.classification}</p>\r\n            <p> {species.designation}</p>\r\n            <p> {species.average_height}</p>\r\n            <p> {species.skin_colors}</p>\r\n            <p> {species.hair_colors}</p>\r\n            <p> {species.eye_colors}</p>\r\n            <p> {species.average_lifespan}</p>\r\n            <p> {species.language}</p>\r\n            <p> {species.homeworld}</p>\r\n            {species.films.length > 0 && (\r\n              <div>\r\n                <h2>films:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('films')}\r\n                >\r\n                  Open list films\r\n                </button>\r\n                <br />\r\n                {typeof species.films[0] !== 'string' &&\r\n                  species.films.map(index => (\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: index.url.slice(20),\r\n                        state: index.url.slice(20),\r\n                      }}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.title}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n            {species.people.length > 0 && (\r\n              <div>\r\n                <h2>people:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('people')}\r\n                >\r\n                  Open list people\r\n                </button>\r\n                <br />\r\n                {typeof species.people[0] !== 'string' &&\r\n                  species.people.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n            <p>{species.created}</p>\r\n            <p>{species.edited}</p>\r\n            <p>{species.url}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../Services/api';\r\nimport helpers from '../Services/helpers';\r\nimport style from './Common.module.css';\r\n\r\nexport default class StarshipsPage extends Component {\r\n  static propTypes = {\r\n    location: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n\r\n  state = {\r\n    starships: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    await this.getDetail(location.pathname);\r\n  }\r\n\r\n  getDetail = async query => {\r\n    this.setState({ isLoading: true });\r\n    const starships = await api.getDetail(query);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ starships });\r\n  };\r\n\r\n  handleLoadList = async type => {\r\n    this.setState({ isLoading: true });\r\n    const { starships } = this.state;\r\n    starships[type] = await helpers.convertArrToObject(starships, type);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ starships });\r\n  };\r\n\r\n  render() {\r\n    const { starships, isLoading } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        {starships && (\r\n          <div>\r\n            <p> {starships.name}</p>\r\n            <p> {starships.model}</p>\r\n            <p> {starships.manufacturer}</p>\r\n            <p> {starships.cost_in_credits}</p>\r\n            <p> {starships.length}</p>\r\n            <p> {starships.max_atmosphering_speed}</p>\r\n            <p> {starships.crew}</p>\r\n            <p> {starships.passengers}</p>\r\n            <p> {starships.cargo_capacity}</p>\r\n            <p> {starships.consumables}</p>\r\n            <p> {starships.hyperdrive_rating}</p>\r\n            <p> {starships.MGLT}</p>\r\n            <p> {starships.starship_class}</p>\r\n\r\n            {starships.pilots.length > 0 && (\r\n              <div>\r\n                <h2>pilots:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('pilots')}\r\n                >\r\n                  Open list pilots\r\n                </button>\r\n                <br />\r\n                {typeof starships.pilots[0] !== 'string' &&\r\n                  starships.pilots.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {starships.films.length > 0 && (\r\n              <div>\r\n                <h2>films:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('films')}\r\n                >\r\n                  Open list films\r\n                </button>\r\n                <br />\r\n                {typeof starships.films[0] !== 'string' &&\r\n                  starships.films.map(index => (\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: index.url.slice(20),\r\n                        state: index.url.slice(20),\r\n                      }}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.title}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n            <p>{starships.created}</p>\r\n            <p>{starships.edited}</p>\r\n            <p>{starships.url}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../Services/api';\r\nimport helpers from '../Services/helpers';\r\nimport style from './Common.module.css';\r\n\r\nexport default class VehiclesPage extends Component {\r\n  static propTypes = {\r\n    location: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n\r\n  state = {\r\n    vehicles: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    await this.getDetail(location.pathname);\r\n  }\r\n\r\n  getDetail = async query => {\r\n    this.setState({ isLoading: true });\r\n    const vehicles = await api.getDetail(query);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ vehicles });\r\n  };\r\n\r\n  handleLoadList = async type => {\r\n    this.setState({ isLoading: true });\r\n    const { vehicles } = this.state;\r\n    vehicles[type] = await helpers.convertArrToObject(vehicles, type);\r\n    this.setState({ isLoading: false });\r\n    this.setState({ vehicles });\r\n  };\r\n\r\n  render() {\r\n    const { vehicles, isLoading } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        {vehicles && (\r\n          <div>\r\n            <p> {vehicles.name}</p>\r\n            <p> {vehicles.model}</p>\r\n            <p> {vehicles.manufacturer}</p>\r\n            <p> {vehicles.cost_in_credits}</p>\r\n            <p> {vehicles.length}</p>\r\n            <p> {vehicles.max_atmosphering_speed}</p>\r\n            <p> {vehicles.crew}</p>\r\n            <p> {vehicles.passengers}</p>\r\n            <p> {vehicles.cargo_capacity}</p>\r\n            <p> {vehicles.consumables}</p>\r\n            <p> {vehicles.vehicle_class}</p>\r\n            {vehicles.films.length > 0 && (\r\n              <div>\r\n                <h2>films:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('films')}\r\n                >\r\n                  Open list films\r\n                </button>\r\n                <br />\r\n                {typeof vehicles.films[0] !== 'string' &&\r\n                  vehicles.films.map(index => (\r\n                    <NavLink\r\n                      to={{\r\n                        pathname: index.url.slice(20),\r\n                        state: index.url.slice(20),\r\n                      }}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.title}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n            {vehicles.pilots.length > 0 && (\r\n              <div>\r\n                <h2>pilots:</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.handleLoadList('pilots')}\r\n                >\r\n                  Open list pilots\r\n                </button>\r\n                <br />\r\n                {typeof vehicles.pilots[0] !== 'string' &&\r\n                  vehicles.pilots.map(index => (\r\n                    <NavLink\r\n                      to={index.url.slice(20)}\r\n                      key={index.url}\r\n                      className={style.name}\r\n                    >\r\n                      {index.name}\r\n                    </NavLink>\r\n                  ))}\r\n              </div>\r\n            )}\r\n            <p>{vehicles.created}</p>\r\n            <p>{vehicles.edited}</p>\r\n            <p>{vehicles.url}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\n  HOME: '/',\n  FILMS: '/films/:Id/',\n  PLANETS: '/planets/:Id/',\n  SPECIES: '/species/:Id/',\n  STARSHIPS: '/starships/:Id/',\n  VEHICLES: '/vehicles/:Id/',\n  PEOPLE: '/people/:Id/',\n};\n","import React from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport HomePage from '../pages/HomePage';\nimport FilmsDetailsPage from '../pages/FilmsDetailsPage';\nimport PeoplePage from '../pages/PeoplePage';\nimport PlanetPage from '../pages/PlanetPage';\nimport SpeciesPage from '../pages/SpeciesPage';\nimport StarshipsPage from '../pages/StarshipsPage';\nimport VehiclesPage from '../pages/VehiclesPage';\nimport routes from '../../routes';\n\nconst App = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path={routes.HOME} component={HomePage} />\n      <Route path={routes.FILMS} component={FilmsDetailsPage} />\n      <Route path={routes.PEOPLE} component={PeoplePage} />\n      <Route path={routes.PLANETS} component={PlanetPage} />\n      <Route path={routes.SPECIES} component={SpeciesPage} />\n      <Route path={routes.STARSHIPS} component={StarshipsPage} />\n      <Route path={routes.VEHICLES} component={VehiclesPage} />\n      <Redirect to={routes.HOME} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}